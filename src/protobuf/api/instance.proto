syntax = "proto3";

import "gogo/protobuf/gogoproto/gogo.proto";
import "protobuf/types/instance.proto";

package mesg.api;
option go_package = "api";

// This is the API to interact with the Instances.
//
// This API is a [gRPC](https://grpc.io/) API.
//
// The source file of this API is hosted on [GitHub](https://github.com/mesg-foundation/engine/blob/master/protobuf/api/instance.proto).
service Instance {

  // Get returns an Instance matching the criteria of the request.
  rpc Get (GetInstanceRequest) returns (types.Instance) {}

  // List returns all Instances matching the criteria of the request.
  rpc List (ListInstanceRequest) returns (ListInstanceResponse) {}
}

// The request's data for the `Get` API.
message GetInstanceRequest {
  bytes hash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];
}

// The request's data for the `List` API.
message ListInstanceRequest {
  // Filter by Services' hash.
  bytes serviceHash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];
}

// The response's data for the `List` API.
message ListInstanceResponse {
  // List of instances that match the request's filters.
  repeated types.Instance instances = 1;
}
